{"ast":null,"code":"var _jsxFileName = \"/home/salmansiddiqui/Documents/GitHub/dave_reacts/cashflow/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction App() {\n  const [CashFlow, setCashflow] = React.useState();\n  const [inflow, setInflow] = React.useState(0);\n  const [outflow, setOutflow] = React.useState(0);\n  const [nature, setNature] = React.useState(\"\");\n  const [trsflow, setTrsflow] = React.useState([]); // const [balance, setBalance] = React.useState(0);\n\n  const inputTxt = e => {\n    setNature(e.target.value);\n  };\n\n  const inputValue = e => {\n    setCashflow(e.target.value);\n  };\n\n  const indflow = e => {\n    setInflow(inflow + parseInt(CashFlow, 10)); // setBalance(inflow+outflow);\n\n    setCashflow(0);\n  };\n\n  const outdflow = e => {\n    setOutflow(outflow + parseInt(CashFlow, 10)); // setBalance(inflow+outflow);\n\n    setCashflow(0);\n  };\n\n  const cashdflow = e => {\n    setTrsflow(trsflow.concat(nature));\n    console.log(trsflow);\n\n    if (CashFlow > 0) {\n      indflow();\n    } else {\n      outdflow();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"Balance :SR \", inflow + outflow, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 34\n    }\n  }), \"Total Inflow :SR \", inflow, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }\n  }), \"Total Outflow :SR \", outflow, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }), \"Description : \", trsflow, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }), \"console.log(trsflow);} Amount \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"cash flow\",\n    onChange: inputValue,\n    value: CashFlow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 26\n    }\n  }), \"Nature of transaction \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Natrue of transaction\",\n    onChange: inputTxt,\n    value: nature,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 27\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: cashdflow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, \"Cashflows  \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }\n  }));\n}\n\n;\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));","map":{"version":3,"sources":["/home/salmansiddiqui/Documents/GitHub/dave_reacts/cashflow/src/index.js"],"names":["React","ReactDOM","App","CashFlow","setCashflow","useState","inflow","setInflow","outflow","setOutflow","nature","setNature","trsflow","setTrsflow","inputTxt","e","target","value","inputValue","indflow","parseInt","outdflow","cashdflow","concat","console","log","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction App() {\n  const [CashFlow, setCashflow] = React.useState();\n  const [inflow, setInflow] = React.useState(0);\n  const [outflow, setOutflow] = React.useState(0);\n  const [nature, setNature] = React.useState(\"\");\n  const [trsflow, setTrsflow] = React.useState([]);\n  // const [balance, setBalance] = React.useState(0);\n \n  const inputTxt = (e) => {\n    setNature(e.target.value);\n  }\n  const inputValue = (e) => {\n    setCashflow(e.target.value);\n  }\n  const indflow = (e) => {\n    setInflow(inflow + parseInt(CashFlow, 10));\n    // setBalance(inflow+outflow);\n    setCashflow(0);\n  }\n  const outdflow = (e) => {\n    setOutflow(outflow + parseInt(CashFlow, 10))\n    // setBalance(inflow+outflow);\n    setCashflow(0);\n  }\n  const cashdflow = (e) => {\n    setTrsflow(trsflow.concat(nature));\n    console.log(trsflow);\n    if (CashFlow > 0) {\n      indflow();\n    }\n    else {\n      outdflow();\n    }\n  }\n  return (<>\n    Balance :SR {inflow+outflow} <br/> \n    Total Inflow :SR {inflow} <br />\n    Total Outflow :SR {outflow} <br />\n    Description : {trsflow} <br />\n    console.log(trsflow);}\n    Amount <input type=\"number\" placeholder=\"cash flow\"\n      onChange={inputValue}\n      value={CashFlow}/> <br />\n    Nature of transaction <input type=\"text\" placeholder=\"Natrue of transaction\"\n      onChange={inputTxt}\n      value={nature}/> <br />\n    <button onClick={cashdflow}>\n      Cashflows  </button><br />\n  </>\n  )\n};\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}